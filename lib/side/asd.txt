def get_virtual_snapshot_extended(search_key,context,snapshot_type="file",is_revision=False,level_key=None,file_type='main',file_name='',ext='',version=None):
 from pyasm.biz import Snapshot
 from pyasm.biz import Project
 from pyasm.search import SearchType
 api=server.server
 sobjects=api._get_sobjects(search_key)
 sobject=sobjects[0]
 result_dict={
 'versionless':{},
 'versioned':{},
}
 if level_key:
  levels=api._get_sobjects(level_key)
  level=levels[0]
  level_type=level.get_search_type()
  level_id=level.get_id()
 else:
  level_type=None
  level_id=None
 description="No description"
 if not file_name:
  file_name=sobject.get_code()
  if not file_name:
   file_name=sobject.get_name()
  if not file_name:
   file_name="unknown"
 file_object=SearchType.create("sthpw/file")
 file_object.set_value("file_name",file_name)
 file_object.set_value("type",file_type)
 file_naming=Project.get_file_naming()
 file_naming.set_sobject(sobject)
 snapshot_versioned=Snapshot.create(sobject,snapshot_type=snapshot_type,context=context,description=description,is_revision=is_revision,level_type=level_type,level_id=level_id,commit=False,version=version)
 file_naming.set_snapshot(snapshot_versioned)
 file_naming.set_ext(ext)
 file_naming.set_file_object(file_object)
 result_dict['versioned']['relative_path']=snapshot_versioned.get_dir('relative',file_type=file_type)
 result_dict['versioned']['file_name']=file_naming.get_file_name()
 snapshot_versionless=Snapshot.create(sobject,snapshot_type=snapshot_type,context=context,description=description,is_revision=False,level_type=level_type,level_id=level_id,commit=False,version=-1)
 file_naming.set_snapshot(snapshot_versionless)
 file_naming.set_file_object(file_object)
 file_naming.set_ext(ext)
 result_dict['versionless']['relative_path']=snapshot_versionless.get_dir('relative',file_type=file_type)
 result_dict['versionless']['file_name']=file_naming.get_file_name()
 return str(result_dict)